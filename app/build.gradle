apply plugin: 'com.android.application'

def configs = rootProject.ext.configs
def versions = rootProject.ext.versions
def signInfo = rootProject.ext.signInfo

android {
    compileSdkVersion configs.compileSdkVersion

    defaultConfig {
        applicationId "com.qwwuyu.example"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        //设置支持的SO库架构
        //ndk { abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86-64' }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    if (signInfo.isSign) {
        signingConfigs {
            sign {
                storeFile file(signInfo.storeFile)
                storePassword signInfo.storePassword
                keyAlias signInfo.keyAlias
                keyPassword signInfo.keyPassword
            }
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def start = signInfo.isSign ? signInfo.keyAlias : "unsign"
            outputFileName = "${start}_${configs.versionName}_${configs.currentDate}_${variant.name}.apk"
        }
    }

    buildTypes {
        release {
            if (signInfo.isSign) signingConfig signingConfigs.sign

            buildConfigField "boolean", "TEST", "false"

            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles 'proguard-rules.pro'
        }

        debug {
            if (signInfo.isSign) signingConfig signingConfigs.sign

            buildConfigField "boolean", "TEST", configs.testEnable

            minifyEnabled false
            versionNameSuffix ".debug"
            proguardFiles 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        a_test {
            buildConfigField("String", "BASE_URL", "\"http://10.13.131.50\"")
            versionNameSuffix ".test"
            manifestPlaceholders = [
                    KEY: "TEST",
            ]
        }

        b_publish {
            buildConfigField("String", "BASE_URL", "\"http://www.qwwuyu.com\"")
            manifestPlaceholders = [
                    KEY: "PUBLISH",
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    lintOptions {
//        abortOnError false
//        disable 'MissingTranslation'
//    }
}

buildscript {
    repositories {
        jcenter()//or mavenCentral()
    }
    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
    }
}
apply plugin: 'com.getkeepsafe.dexcount'
dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = false
    verbose = false
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //project
    debugImplementation project(':qw-lib')
    releaseImplementation project(':qw-lib')
    implementation project(':qw-widget')
    //butterknife
    implementation "com.jakewharton:butterknife:$versions.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknife"
    //dagger2
    implementation "com.google.dagger:dagger:$versions.dagger2"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger2"
    //numberprogressbar
    implementation "com.daimajia.numberprogressbar:library:1.4@aar"
}
